from frozendict import frozendict


CHAR_NAMES = (
    'Alois',
    'Anna',
    'Annette',
    'Ashe',
    'Balthus',
    'Bernadetta',
    'Caspar',
    'Catherine',
    'Claude',
    'Constance',
    'Cyril',
    'Dedue',
    'Dimitri',
    'Dorothea',
    'Edelgard',
    'Felix',
    'Ferdinand',
    'Flayn',
    'Gilbert',
    'Hanneman',
    'Hapi',
    'Hilda',
    'Hubert',
    'Ignatz',
    'Ingrid',
    'Jeritza',
    'Leonie',
    'Linhardt',
    'Lorenz',
    'Lysithea',
    'Manuela',
    'Marianne',
    'Mercedes',
    'Petra',
    'Raphael',
    'Seteth',
    'Shamir',
    'Sylvain',
    'Yuri',
    'Jeralt',
    'Rhea'
)

MEAL_CATEGORIES = (
    'n/a',
    'Sweets',
    'Meat',
    'Vegetables',
    'Fish',
    'Spicy',
    'Bitter'
)

MEAL_NAMES = (
    'Fish Sandwich',
    'Pickled Rabbit Skewers',
    'Gautier Cheese Gratin',
    'Sauteed Pheasant and Eggs',
    'Small Fish Skewers',
    'Super-Spicy Fish Dango',
    'Sweet Bun Trio',
    'Vegetable Pasta Salad',
    'Pheasant Roast with Berry Sauce',
    'Bourgeois Pike',
    'Pickled Seafood and Vegetables',
    'Daphnel Stew',
    'Cabbage and Herring Stew',
    'Beast Meat Teppanyaki',
    'Cheesy Verona Stew',
    'Onion Gratin Soup',
    'Grilled Herring',
    'Sweet and Salty Whitefish Saute',
    'Peach Sorbet',
    'Derdriu-Style Fried Pheasant',
    'Fruit and Herring Tart',
    'Saghert and Cream',
    'Gronder Meat Skewers',
    "Fisherman's Bounty",
    'Vegetable Stir-Fry',
    'Fish and Bean Soup',
    'Spicy Fish and Turnip Stew',
    'Country-Style Red Turnip Plate',
    'Garreg Mach Meat Pie',
    'Fried Crayfish',
    'Sauteed Jerky',
    'Two-Fish Saute'
)

INGREDIENT_NAMES = (
    'Airmid Goby',
    'Airmid Pike',
    'Albinean Berries',
    'Albinean Herring',
    'Cabbage',
    'Caledonian Crayfish',
    'Caledonian Gar',
    'Carrot',
    'Chickpeas',
    'Noa Fruit',
    'Onion',
    'Peach Currant',
    'Poultry',
    'Teutates Loach',
    'Tomato',
    'Turnip',
    'Verona',
    'White Trout',
    'Wild Game'
)

LOST_ITEM_NAMES = (
    'A Treatise on Etiquette',
    'Agricultural Survey',
    'Animal Bone Dice',
    'Animated Bait',
    'Annotated Dictionary',
    'Antique Clasp',
    'Armor Clasp',
    'Art Book',
    'Artificial Flower',
    'Badge of Graduation',
    'Bag of Seeds',
    'Bag of Tea Leaves',
    'Balance Scale',
    'Basket of Berries',
    'Big Spoon',
    'Black Hair Tie',
    'Black Iron Spur',
    'Black Leather Gloves',
    'Blue Stone',
    'Board Game Piece',
    'Book of Ghost Stories',
    'Bundle of Dry Hemp',
    'Bundle of Herbs',
    'Burlap Sack of Rocks',
    'Carving Hammer',
    'Centipede Picture',
    'Clean Dusting Cloth',
    'Confessional Letter',
    'Crude Arrowheads',
    'Crumpled Love Letter',
    'Curry Comb',
    'Dulled Longsword',
    'Dusty Book of Fables',
    'Eastern Porcelain',
    'Elegant Hair Clip',
    'Encyclopedia of Sweets',
    'Evil-Repelling Amulet',
    'Exotic Feather',
    'Faded Star Chart',
    'Feather Pillow',
    'Folding Razor',
    'Foreign Gold Coin',
    'Fruit Preserves',
    'Fur Scarf',
    'Gardening Shears',
    'Gold Earring',
    'Grounding Charm',
    'Hammer and Chisel',
    'Hand Drawn Map',
    'Handmade Hair Clip',
    'Hedgehog Case',
    'How to Bake Sweets',
    'How to be Tidy',
    'Hresvelg Treatise',
    'Introduction to Magic',
    'Iron Cooking Pot',
    'Jar of Sweets',
    'Jousting Almanac',
    'Leather Bow Sheath',
    'Lens Cloth',
    'Letter to Rhea',
    'Letter to the Goddess',
    'Light Purple Veil',
    'Lovely Comb',
    'Maintenance Oil',
    'Makeup Brush',
    'Mild Stomach Poison',
    "Moon Knight's Tale",
    'Mysterious Notebook',
    'Needle and Thread',
    'New Bottle of Perfume',
    'Nimbus Charm',
    'Noseless Puppet',
    'Noxious Handkerchief',
    'Old Cleaning Cloth',
    'Old Fishing Rod',
    'Old Map of Enbarr',
    'Pegasus Horseshoes',
    'Portrait of Rhea',
    'Princess Doll',
    'Rare Item Index',
    'Repellent Powder',
    'School of Sorcery Book',
    'Secret Ledger',
    'Seiros Scriptures',
    'Shiny Striated Pebble',
    'Silk Handkerchief',
    'Silver Brooch',
    'Silver Necklace',
    'Sketch of a Sigil',
    'Small Tanned Hide',
    'Snapped Writing Quill',
    'Songstress Poster',
    'Spotless Bandage',
    'Stiff Hand Wrap',
    'Still-Life Picture',
    'Suspicious Dice',
    'Sword Belt Fragment',
    'Tattered Overcoat',
    'The History of Sreng',
    'The Saints Revealed',
    'Thunderbrand Replica',
    'Time-worn Quill Pen',
    'Toothed Dagger',
    'Training Logbook',
    'Unfinished Fable',
    'Unfinished Score',
    'Unused Lipstick',
    'Used Bottle of Perfume',
    'Wax Diptych',
    'Weathered Cloak',
    'Well-Used Hatchet',
    'Well-Worn Hammock',
    'Wellness Herbs',
    'White Glove',
    'Wooden Button',
    'Wooden Flask'
)

MONTH_NAMES = (
    "DLC",
    "Guardian Moon",
    "Pegasus Moon",
    "Lone Moon",
    "Great Tree Moon",
    "Harpstring Moon",
    "Garland Moon",
    "Blue Sea Moon",
    "Verdant Rain Moon",
    "Horsebow Moon",
    "Wyvern Moon",
    "Red Wolf Moon",
    "Ethereal Moon"
)

GIFT_NAMES = (
    "",
)

GIFT_LIKED_BY_IDX = frozendict({
    0: [],
})

MONESTARY_LOCATION_NAMES = (
    '1st Floor - Dormitories',
    "1st Floor Dormitories - Outside Bernadetta's Room",
    '2nd Floor Dormitories - Hallway',
    'Above Graveyard',
    'Abyss Entrance',
    'Black Eagle Classroom',
    'Black Eagles Classroom',
    'Blue Lion Classroom',
    'Blue Lions Classroom',
    'Cathedral',
    'Cathedral - Central',
    'Cathedral - East Side',
    'Cathedral - Saint Statue Room',
    'Cathedreal - Holy Mausoleum Entrance',
    'Dining Hall',
    'Dining Hall Balcony',
    'Dining Hall Gardens',
    'Entrance Hall',
    'Fishing Hole',
    'Fishing Pond',
    'Golden Deer Classroom',
    'Graveyard',
    'Greenhouse',
    "Knight's Hall",
    "Knight's Hall Entrance",
    'Library',
    'Marketplace',
    'Near Amiibo Gazebo',
    "Officer's Academy",
    "Officer's Academy Courtyard",
    "Pathway North of Knight's Hall",
    'Reception Hall',
    'Sauna',
    'Second Floor',
    'Second Floor - Advisory Room',
    'Second Floor - Audience Chamber',
    'Second Floor - Hallway',
    'Second Floor - Infirmary',
    'Second Floor - Library',
    'Second Floor - Lobby',
    'Stables',
    'Training Grounds',
    'Training Hall'
)

MEALPICKS = frozendict({
    "Saghert and Cream": ["Edelgard",
                          "Dimitri",
                          "Ferdinand",
                          "Linhardt",
                          "Bernadetta",
                          "Dorothea",
                          "Ashe",
                          "Mercedes",
                          "Annette",
                          "Lorenz",
                          "Ignatz",
                          "Lysithea",
                          "Marianne",
                          "Hilda",
                          "Flayn",
                          "Alois",
                          "Yuri",
                          "Constance",
                          "Jeritza"],
    "Sweet Bun Trio": ["Edelgard",
                       "Dimitri",
                       "Ferdinand",
                       "Linhardt",
                       "Caspar",
                       "Bernadetta",
                       "Ashe",
                       "Sylvain",
                       "Mercedes",
                       "Annette",
                       "Ingrid",
                       "Ignatz",
                       "Lysithea",
                       "Marianne",
                       "Hilda",
                       "Flayn",
                       "Alois",
                       "Yuri",
                       "Constance",
                       "Jeritza"],
    "Pheasant Roast with Berry Sauce": ["Claude",
                                        "Ferdinand",
                                        "Linhardt",
                                        "Ashe",
                                        "Sylvain",
                                        "Mercedes",
                                        "Annette",
                                        "Ingrid",
                                        "Raphael",
                                        "Lysithea",
                                        "Flayn",
                                        "Alois",
                                        "Shamir",
                                        "Cyril",
                                        "Yuri",
                                        "Constance",
                                        "Hapi",
                                        "Jeritza",
                                        "Anna"],
    "Peach Sorbet": ["Edelgard",
                     "Linhardt",
                     "Bernadetta",
                     "Dorothea",
                     "Ashe",
                     "Mercedes",
                     "Annette",
                     "Lysithea",
                     "Marianne",
                     "Hilda",
                     "Flayn",
                     "Hanneman",
                     "Alois",
                     "Shamir",
                     "Yuri",
                     "Constance",
                     "Jeritza",
                     "Anna"],
    "Beast Meat Teppanyaki": ["Claude",
                              "Caspar",
                              "Petra",
                              "Felix",
                              "Ingrid",
                              "Raphael",
                              "Leonie",
                              "Manuela",
                              "Gilbert",
                              "Catherine",
                              "Shamir",
                              "Cyril",
                              "Balthus",
                              "Hapi",
                              "Anna"],
    "Pickled Rabbit Skewers": ["Claude",
                               "Caspar",
                               "Petra",
                               "Felix",
                               "Ingrid",
                               "Raphael",
                               "Lysithea",
                               "Manuela",
                               "Gilbert",
                               "Catherine",
                               "Shamir",
                               "Cyril",
                               "Yuri",
                               "Balthus",
                               "Hapi",
                               "Anna"],
    "Daphnel Stew": ["Claude",
                     "Ferdinand",
                     "Linhardt",
                     "Caspar",
                     "Petra",
                     "Dedue",
                     "Felix",
                     "Ingrid",
                     "Lorenz",
                     "Raphael",
                     "Leonie",
                     "Seteth",
                     "Manuela",
                     "Shamir",
                     "Cyril",
                     "Yuri",
                     "Balthus",
                     "Hapi"],
    "Gronder Meat Skewers": ["Claude",
                             "Caspar",
                             "Petra",
                             "Felix",
                             "Ingrid",
                             "Raphael",
                             "Leonie",
                             "Manuela",
                             "Gilbert",
                             "Catherine",
                             "Shamir",
                             "Cyril",
                             "Balthus",
                             "Hapi",
                             "Jeritza"],
    "Derdriu-Style Fried Pheasant": ["Claude",
                                     "Caspar",
                                     "Bernadetta",
                                     "Felix",
                                     "Ingrid",
                                     "Raphael",
                                     "Lysithea",
                                     "Hilda",
                                     "Leonie",
                                     "Seteth",
                                     "Hanneman",
                                     "Manuela",
                                     "Gilbert",
                                     "Catherine",
                                     "Cyril",
                                     "Balthus",
                                     "Hapi",
                                     "Anna"],
    "Vegetable Pasta Salad": ["Edelgard",
                              "Ferdinand",
                              "Caspar",
                              "Bernadetta",
                              "Dorothea",
                              "Ashe",
                              "Mercedes",
                              "Annette",
                              "Ingrid",
                              "Ignatz",
                              "Marianne",
                              "Seteth",
                              "Hanneman",
                              "Gilbert",
                              "Shamir",
                              "Cyril",
                              "Constance",
                              "Anna"],
    "Onion Gratin Soup": ["Edelgard",
                          "Dimitri",
                          "Claude",
                          "Ferdinand",
                          "Linhardt",
                          "Dorothea",
                          "Dedue",
                          "Mercedes",
                          "Annette",
                          "Lorenz",
                          "Marianne",
                          "Leonie",
                          "Flayn",
                          "Alois",
                          "Catherine",
                          "Yuri",
                          "Hapi",
                          "Jeritza"],
    "Country-Style Red Turnip Plate": ["Claude",
                                       "Caspar",
                                       "Bernadetta",
                                       "Dorothea",
                                       "Petra",
                                       "Raphael",
                                       "Hilda",
                                       "Flayn",
                                       "Gilbert",
                                       "Catherine",
                                       "Shamir",
                                       "Yuri",
                                       "Hapi"],
    "Vegetable Stir-Fry": ["Edelgard",
                           "Claude",
                           "Ferdinand",
                           "Caspar",
                           "Bernadetta",
                           "Dorothea",
                           "Petra",
                           "Dedue",
                           "Annette",
                           "Ignatz",
                           "Marianne",
                           "Leonie",
                           "Manuela",
                           "Gilbert",
                           "Shamir",
                           "Cyril",
                           "Yuri",
                           "Hapi"],
    "Grilled Herring": ["Ferdinand",
                        "Petra",
                        "Dedue",
                        "Mercedes",
                        "Annette",
                        "Ingrid",
                        "Leonie",
                        "Seteth",
                        "Flayn",
                        "Gilbert",
                        "Alois",
                        "Catherine",
                        "Yuri",
                        "Jeritza"],
    "Fish and Bean Soup": ["Edelgard",
                           "Linhardt",
                           "Dedue",
                           "Ashe",
                           "Sylvain",
                           "Mercedes",
                           "Annette",
                           "Lorenz",
                           "Raphael",
                           "Ignatz",
                           "Marianne",
                           "Hilda",
                           "Leonie",
                           "Flayn",
                           "Manuela",
                           "Alois",
                           "Cyril",
                           "Yuri",
                           "Hapi",
                           "Jeritza"],
    "Fruit and Herring Tart": ["Ferdinand",
                               "Bernadetta",
                               "Dedue",
                               "Sylvain",
                               "Mercedes",
                               "Annette",
                               "Ingrid",
                               "Lorenz",
                               "Ignatz",
                               "Marianne",
                               "Leonie",
                               "Seteth",
                               "Flayn",
                               "Alois",
                               "Catherine",
                               "Constance"],
    "Fisherman\'s Bounty": ["Ferdinand",
                            "Petra",
                            "Dedue",
                            "Ingrid",
                            "Raphael",
                            "Ignatz",
                            "Marianne",
                            "Hilda",
                            "Leonie",
                            "Flayn",
                            "Manuela",
                            "Gilbert",
                            "Alois",
                            "Catherine",
                            "Yuri",
                            "Balthus",
                            "Hapi",
                            "Jeritza"],
    "Fish Sandwich": ["Edelgard",
                      "Ferdinand",
                      "Petra",
                      "Dedue",
                      "Ashe",
                      "Sylvain",
                      "Ingrid",
                      "Raphael",
                      "Leonie",
                      "Seteth",
                      "Flayn",
                      "Manuela",
                      "Gilbert",
                      "Alois",
                      "Catherine",
                      "Yuri",
                      "Hapi"],
    "Two-Fish Saute": ["Hubert",
                       "Bernadetta",
                       "Dedue",
                       "Felix",
                       "Sylvain",
                       "Mercedes",
                       "Annette",
                       "Lorenz",
                       "Ignatz",
                       "Lysithea",
                       "Marianne",
                       "Hilda",
                       "Leonie",
                       "Flayn",
                       "Hanneman",
                       "Manuela",
                       "Alois",
                       "Catherine",
                       "Cyril",
                       "Yuri",
                       "Constance",
                       "Jeritza"],
    "Bourgeois Pike": ["Claude",
                       "Ferdinand",
                       "Bernadetta",
                       "Dedue",
                       "Lorenz",
                       "Ignatz",
                       "Marianne",
                       "Leonie",
                       "Seteth",
                       "Flayn",
                       "Hanneman",
                       "Manuela",
                       "Alois",
                       "Catherine",
                       "Constance",
                       "Anna"],
    "Sauteed Jerky": ["Dimitri",
                      "Claude",
                      "Hubert",
                      "Caspar",
                      "Petra",
                      "Dedue",
                      "Felix",
                      "Raphael",
                      "Manuela",
                      "Shamir",
                      "Cyril",
                      "Yuri",
                      "Balthus",
                      "Hapi",
                      "Anna"],
    "Spicy Fish and Turnip Stew": ["Hubert",
                                   "Petra",
                                   "Dedue",
                                   "Felix",
                                   "Ashe",
                                   "Sylvain",
                                   "Annette",
                                   "Ingrid",
                                   "Leonie",
                                   "Seteth",
                                   "Manuela",
                                   "Gilbert",
                                   "Balthus",
                                   "Hapi",
                                   "Anna"],
    "Sweet and Salty Whitefish Saute": ["Hubert",
                                        "Dedue",
                                        "Felix",
                                        "Ashe",
                                        "Sylvain",
                                        "Annette",
                                        "Ingrid",
                                        "Leonie",
                                        "Seteth",
                                        "Manuela",
                                        "Gilbert",
                                        "Balthus",
                                        "Hapi",
                                        "Anna"],
    "Super-Spicy Fish Dango": ["Hubert",
                               "Petra",
                               "Dedue",
                               "Felix",
                               "Sylvain",
                               "Ingrid",
                               "Ignatz",
                               "Marianne",
                               "Leonie",
                               "Seteth",
                               "Hanneman",
                               "Manuela",
                               "Gilbert",
                               "Catherine",
                               "Shamir",
                               "Balthus",
                               "Hapi"],
    "Sauteed Pheasant and Eggs": ["Edelgard",
                                  "Claude",
                                  "Hubert",
                                  "Ferdinand",
                                  "Caspar",
                                  "Felix",
                                  "Sylvain",
                                  "Raphael",
                                  "Ignatz",
                                  "Marianne",
                                  "Seteth",
                                  "Manuela",
                                  "Gilbert",
                                  "Shamir",
                                  "Cyril",
                                  "Constance",
                                  "Hapi",
                                  "Anna"],
    "Garreg Mach Meat Pie": ["Claude",
                             "Hubert",
                             "Linhardt",
                             "Caspar",
                             "Dorothea",
                             "Felix",
                             "Sylvain",
                             "Lorenz",
                             "Raphael",
                             "Ignatz",
                             "Hanneman",
                             "Manuela",
                             "Gilbert",
                             "Catherine",
                             "Balthus"],
    "Cheesy Verona Stew": ["Dimitri",
                           "Claude",
                           "Hubert",
                           "Bernadetta",
                           "Petra",
                           "Sylvain",
                           "Raphael",
                           "Marianne",
                           "Hilda",
                           "Leonie",
                           "Seteth",
                           "Flayn",
                           "Hanneman",
                           "Gilbert",
                           "Catherine",
                           "Balthus"],
    "Pickled Seafood and Vegetables": ["Hubert",
                                       "Petra",
                                       "Dedue",
                                       "Annette",
                                       "Raphael",
                                       "Leonie",
                                       "Seteth",
                                       "Flayn",
                                       "Hanneman",
                                       "Gilbert",
                                       "Alois",
                                       "Catherine",
                                       "Hapi",
                                       "Anna"],
    "Gautier Cheese Gratin": ["Dimitri",
                              "Claude",
                              "Hubert",
                              "Linhardt",
                              "Dorothea",
                              "Felix",
                              "Raphael",
                              "Hilda",
                              "Hanneman",
                              "Catherine",
                              "Balthus"],
    "Cabbage and Herring Stew": ["Claude",
                                 "Hubert",
                                 "Lorenz",
                                 "Ignatz",
                                 "Marianne",
                                 "Leonie",
                                 "Flayn",
                                 "Hanneman",
                                 "Manuela",
                                 "Gilbert",
                                 "Catherine",
                                 "Balthus",
                                 "Hapi",
                                 "Jeritza"],
    "Small Fish Skewers": ["Hapi",
                           "Jeritza"],
    "Fried Crayfish": ["Hapi",
                       "Jeritza",
                       "Anna"],
})

MEALPICKS_IDX = frozendict({
    21: [14,
         12,
         16,
         27,
         5,
         13,
         3,
         32,
         2,
         28,
         23,
         29,
         31,
         21,
         17,
         0,
         38,
         9,
         25],
    6: [14,
        12,
        16,
        27,
        6,
        5,
        3,
        37,
        32,
        2,
        24,
        23,
        29,
        31,
        21,
        17,
        0,
        38,
        9,
        25],
    8: [8,
        16,
        27,
        3,
        37,
        32,
        2,
        24,
        34,
        29,
        17,
        0,
        36,
        10,
        38,
        9,
        20,
        25,
        1],
    18: [14,
         27,
         5,
         13,
         3,
         32,
         2,
         29,
         31,
         21,
         17,
         19,
         0,
         36,
         38,
         9,
         25,
         1],
    13: [8,
         6,
         33,
         15,
         24,
         34,
         26,
         30,
         18,
         7,
         36,
         10,
         4,
         20,
         1],
    1: [8,
        6,
        33,
        15,
        24,
        34,
        29,
        30,
        18,
        7,
        36,
        10,
        38,
        4,
        20,
        1],
    11: [8,
         16,
         27,
         6,
         33,
         11,
         15,
         24,
         28,
         34,
         26,
         35,
         30,
         36,
         10,
         38,
         4,
         20],
    22: [8,
         6,
         33,
         15,
         24,
         34,
         26,
         30,
         18,
         7,
         36,
         10,
         4,
         20,
         25],
    19: [8,
         6,
         5,
         15,
         24,
         34,
         29,
         21,
         26,
         35,
         19,
         30,
         18,
         7,
         10,
         4,
         20,
         1],
    7: [14,
        16,
        6,
        5,
        13,
        3,
        32,
        2,
        24,
        23,
        31,
        35,
        19,
        18,
        36,
        10,
        9,
        1],
    15: [14,
         12,
         8,
         16,
         27,
         13,
         11,
         32,
         2,
         28,
         31,
         26,
         17,
         0,
         7,
         38,
         20,
         25],
    27: [8,
         6,
         5,
         13,
         33,
         34,
         21,
         17,
         18,
         7,
         36,
         38,
         20],
    24: [14,
         8,
         16,
         6,
         5,
         13,
         33,
         11,
         2,
         23,
         31,
         26,
         30,
         18,
         36,
         10,
         38,
         20],
    16: [16,
         33,
         11,
         32,
         2,
         24,
         26,
         35,
         17,
         18,
         0,
         7,
         38,
         25],
    25: [14,
         27,
         11,
         3,
         37,
         32,
         2,
         28,
         34,
         23,
         31,
         21,
         26,
         17,
         30,
         0,
         10,
         38,
         20,
         25],
    20: [16,
         5,
         11,
         37,
         32,
         2,
         24,
         28,
         23,
         31,
         26,
         35,
         17,
         0,
         7,
         9],
    23: [16,
         33,
         11,
         24,
         34,
         23,
         31,
         21,
         26,
         17,
         30,
         18,
         0,
         7,
         38,
         4,
         20,
         25],
    0: [14,
        16,
        33,
        11,
        3,
        37,
        24,
        34,
        26,
        35,
        17,
        30,
        18,
        0,
        7,
        38,
        20],
    31: [22,
         5,
         11,
         15,
         37,
         32,
         2,
         28,
         23,
         29,
         31,
         21,
         26,
         17,
         19,
         30,
         0,
         7,
         10,
         38,
         9,
         25],
    9: [8,
        16,
        5,
        11,
        28,
        23,
        31,
        26,
        35,
        17,
        19,
        30,
        0,
        7,
        9,
        1],
    30: [12,
         8,
         22,
         6,
         33,
         11,
         15,
         34,
         30,
         36,
         10,
         38,
         4,
         20,
         1],
    26: [22,
         33,
         11,
         15,
         3,
         37,
         2,
         24,
         26,
         35,
         30,
         18,
         4,
         20,
         1],
    17: [22,
         11,
         15,
         3,
         37,
         2,
         24,
         26,
         35,
         30,
         18,
         4,
         20,
         1],
    5: [22,
        33,
        11,
        15,
        37,
        24,
        23,
        31,
        26,
        35,
        19,
        30,
        18,
        7,
        36,
        4,
        20],
    3: [14,
        8,
        22,
        16,
        6,
        15,
        37,
        34,
        23,
        31,
        35,
        30,
        18,
        36,
        10,
        9,
        20,
        1],
    28: [8,
         22,
         27,
         6,
         13,
         15,
         37,
         28,
         34,
         23,
         19,
         30,
         18,
         7,
         4],
    14: [12,
         8,
         22,
         5,
         33,
         37,
         34,
         31,
         21,
         26,
         35,
         17,
         19,
         18,
         7,
         4],
    10: [22,
         33,
         11,
         2,
         34,
         26,
         35,
         17,
         19,
         18,
         0,
         7,
         20,
         1],
    2: [12,
        8,
        22,
        27,
        13,
        15,
        34,
        21,
        19,
        7,
        4],
    12: [8,
         22,
         28,
         23,
         31,
         26,
         17,
         19,
         30,
         18,
         7,
         4,
         20,
         25],
    4: [20,
        25],
    29: [20,
         25,
         1]
})

LOST_ITEM_OWNERS = frozendict({
    "Edelgard": ["White Glove",
                 "Time-worn Quill Pen",
                 "Eastern Porcelain"],
    "Dimitri": ["Dulled Longsword",
                "Black Leather Gloves",
                "Training Logbook"],
    "Claude": ["Leather Bow Sheath",
               "Mild Stomach Poison",
               "Board Game Piece"],
    "Hubert": ["Hresvelg Treatise",
               "Noxious Handkerchief",
               "Folding Razor"],
    "Ferdinand": ["Maintenance Oil",
                  "Agricultural Survey",
                  "Bag of Tea Leaves"],
    "Linhardt": ["The Saints Revealed",
                 "Feather Pillow",
                 "Animated Bait"],
    "Caspar": ["Thunderbrand Replica",
               "Tattered Overcoat",
               "Grounding Charm"],
    "Bernadetta": ["Needle and Thread",
                   "Still-Life Picture",
                   "Hedgehog Case"],
    "Dorothea": ["Silver Brooch",
                 "Songstress Poster",
                 "Lovely Comb"],
    "Petra": ["Exotic Feather",
              "Small Tanned Hide",
              "Annotated Dictionary"],
    "Dedue": ["Gold Earring",
              "Gardening Shears",
              "Iron Cooking Pot"],
    "Felix": ["Black Iron Spur",
              "Sword Belt Fragment",
              "Toothed Dagger"],
    "Ashe": ["Moon Knight's Tale",
             "Evil-Repelling Amulet",
             "Bundle of Herbs"],
    "Sylvain": ["Unused Lipstick",
                "Crumpled Love Letter",
                "The History of Sreng"],
    "Mercedes": ["Book of Ghost Stories",
                 "Fruit Preserves",
                 "How to Bake Sweets"],
    "Annette": ["Unfinished Score",
                "School of Sorcery Book",
                "Wax Diptych"],
    "Ingrid": ["Pegasus Horseshoes",
               "Jousting Almanac",
               "Curry Comb"],
    "Lorenz": ["Artificial Flower",
               "A Treatise on Etiquette",
               "Silk Handkerchief"],
    "Raphael": ["Wooden Button",
                "Burlap Sack of Rocks",
                "Big Spoon"],
    "Ignatz": ["Blue Stone",
               "Art Book",
               "Letter to the Goddess"],
    "Lysithea": ["Encyclopedia of Sweets",
                 "Princess Doll",
                 "New Bottle of Perfume"],
    "Marianne": ["Bag of Seeds",
                 "How to be Tidy",
                 "Confessional Letter"],
    "Hilda": ["Handmade Hair Clip",
              "Spotless Bandage",
              "Used Bottle of Perfume"],
    "Leonie": ["Hand Drawn Map",
               "Crude Arrowheads",
               "Fur Scarf"],
    "Seteth": ["Unfinished Fable",
               "Old Fishing Rod",
               "Snapped Writing Quill"],
    "Flayn": ["Antique Clasp",
              "Old Map of Enbarr",
              "Dusty Book of Fables"],
    "Hanneman": ["Lens Cloth",
                 "Hammer and Chisel",
                 "Sketch of a Sigil"],
    "Manuela": ["Wellness Herbs",
                "Clean Dusting Cloth",
                "Light Purple Veil"],
    "Gilbert": ["Noseless Puppet",
                "Carving Hammer",
                "Silver Necklace"],
    "Alois": ["Introduction to Magic",
              "Foreign Gold Coin",
              "Mysterious Notebook"],
    "Catherine": ["Weathered Cloak",
                  "Letter to Rhea",
                  "Badge of Graduation"],
    "Shamir": ["Bundle of Dry Hemp",
               "Centipede Picture",
               "Animal Bone Dice"],
    "Cyril": ["Well-Used Hatchet",
              "Portrait of Rhea",
              "Old Cleaning Cloth"],
    "Jeralt": ["Wooden Flask"],
    "Rhea": ["Elegant Hair Clip",
             "Seiros Scriptures",
             "Faded Star Chart"],
    "Yuri": ["Makeup Brush",
             "Suspicious Dice"],
    "Balthus": ["Well-Worn Hammock",
                "Stiff Hand Wrap"],
    "Constance": ["Nimbus Charm",
                  "Repellent Powder"],
    "Hapi": ["Shiny Striated Pebble",
             "Basket of Berries"],
    "Jeritza": ["Jar of Sweets",
                "Black Hair Tie",
                "Armor Clasp"],
    "Anna": ["Secret Ledger",
             "Balance Scale",
             "Rare Item Index"],
})

LOST_ITEM_OWNERS_IDX = frozendict({
    14: [114,
         102,
         33],
    12: [31,
         17,
         104],
    8: [58,
        66,
        19],
    22: [53,
         73,
         40],
    16: [64,
         1,
         11],
    27: [100,
         39,
         3],
    6: [101,
        98,
        46],
    5: [69,
        95,
        50],
    13: [87,
         92,
         63],
    33: [37,
         90,
         4],
    11: [45,
         44,
         55],
    15: [16,
         97,
         103],
    3: [67,
        36,
        22],
    37: [107,
         29,
         99],
    32: [20,
         42,
         51],
    2: [106,
        82,
        109],
    24: [77,
         57,
         30],
    28: [8,
         0,
         86],
    34: [115,
         23,
         14],
    23: [
        18,
        7,
        61],
    29: [35,
         79,
         70],
    31: [10,
         52,
         27],
    21: [49,
         93,
         108],
    26: [48,
         28,
         43],
    35: [105,
         75,
         91],
    17: [5,
         76,
         32],
    19: [59,
         47,
         89],
    30: [113,
         26,
         62],
    18: [72,
         24,
         88],
    0: [54,
        41,
        68],
    7: [110,
        60,
        9],
    36: [21,
         25,
         2],
    10: [111,
         78,
         74],
    39: [116],
    40: [34,
         84,
         38],
    38: [65,
         96],
    4: [112,
        94],
    9: [71,
        81],
    20: [85,
         13],
    25: [56,
         15,
         6],
    1: [83,
        12,
        80]
})

LOST_ITEM_MONTHS = frozendict({
    'Blue Sea Moon': ['Wellness Herbs',
                      'Confessional Letter',
                      'Used Bottle of Perfume',
                      'Badge of Graduation',
                      'Artificial Flower',
                      'Thunderbrand Replica',
                      'Bag of Tea Leaves',
                      'Mysterious Notebook',
                      'Secret Ledger',
                      'Noxious Handkerchief'],
    'DLC': ['Stiff Hand Wrap',
            'Basket of Berries',
            'Balance Scale'],
    'Ethereal Moon': ['Princess Doll',
                      'Carving Hammer',
                      'Big Spoon',
                      'Old Fishing Rod',
                      'Old Cleaning Cloth',
                      'Lens Cloth',
                      'Blue Stone',
                      'Book of Ghost Stories',
                      'Centipede Picture',
                      'Animated Bait',
                      'Evil-Repelling Amulet',
                      'Unfinished Score'],
    'Garland Moon': ['School of Sorcery Book',
                     'Hand Drawn Map',
                     'White Glove',
                     'Elegant Hair Clip',
                     'Sketch of a Sigil',
                     'Wooden Flask',
                     'Leather Bow Sheath',
                     'Wooden Button',
                     'Tattered Overcoat'],
    'Guardian Moon': ['Weathered Cloak',
                      'Snapped Writing Quill',
                      'Light Purple Veil',
                      'Dusty Book of Fables',
                      'Fur Scarf',
                      'Lovely Comb',
                      'Board Game Piece',
                      'Iron Cooking Pot',
                      'Training Logbook',
                      'Animated Bait',
                      'Bag of Seeds',
                      'Pegasus Horseshoes',
                      'Handmade Hair Clip',
                      'Letter to the Goddess',
                      'Introduction to Magic',
                      'Noseless Puppet',
                      'Unfinished Score',
                      'Animal Bone Dice',
                      'Toothed Dagger'],
    'Horsebow Moon': ['Hammer and Chisel',
                      'Black Leather Gloves',
                      'Gardening Shears',
                      'Silver Necklace',
                      'Silver Brooch',
                      'Antique Clasp',
                      'How to be Tidy',
                      'Spotless Bandage',
                      'How to Bake Sweets',
                      'Agricultural Survey',
                      'Seiros Scriptures',
                      'Bundle of Herbs'],
    'Pegasus Moon': ['Basket of Berries',
                     "Moon Knight's Tale",
                     'Balance Scale',
                     'Annotated Dictionary',
                     'Wax Diptych',
                     'New Bottle of Perfume',
                     'Maintenance Oil',
                     'Stiff Hand Wrap',
                     'The History of Sreng',
                     'Grounding Charm',
                     'Faded Star Chart',
                     'Silk Handkerchief',
                     'Hedgehog Case'],
    'Red Wolf Moon': ['Foreign Gold Coin',
                      'Fruit Preserves',
                      'Mild Stomach Poison',
                      'Crude Arrowheads',
                      'Crumpled Love Letter',
                      'Songstress Poster',
                      'Clean Dusting Cloth',
                      'Repellent Powder',
                      'A Treatise on Etiquette',
                      'Old Map of Enbarr',
                      'Still-Life Picture',
                      'Unfinished Fable',
                      'Well-Used Hatchet',
                      'The Saints Revealed'],
    'Verdant Rain Moon': ['Encyclopedia of Sweets',
                          'Makeup Brush',
                          'Feather Pillow',
                          'Needle and Thread',
                          'Art Book',
                          'Unused Lipstick',
                          'Portrait of Rhea',
                          'Sword Belt Fragment',
                          'Curry Comb',
                          'Nimbus Charm',
                          'Exotic Feather'],
    'Wyvern Moon': ['Bundle of Dry Hemp',
                    'Burlap Sack of Rocks',
                    'Black Iron Spur',
                    'Jousting Almanac',
                    'Small Tanned Hide',
                    'Letter to Rhea',
                    'Shiny Striated Pebble']
})

LOST_ITEM_LOCATIONS = frozendict({
    'A Treatise on Etiquette': 'Entrance Hall',
    'Agricultural Survey': 'Stables',
    'Animal Bone Dice': 'Training Grounds',
    'Animated Bait': 'Second Floor - Library',
    'Annotated Dictionary': 'Dining Hall',
    'Antique Clasp': 'Fishing Pond',
    'Art Book': 'Cathedral - Central',
    'Artificial Flower': "Pathway North of Knight's Hall",
    'Badge of Graduation': 'Training Grounds',
    'Bag of Seeds': 'Cathedral',
    'Bag of Tea Leaves': 'Black Eagles Classroom',
    'Balance Scale': 'Graveyard',
    'Basket of Berries': 'Greenhouse',
    'Big Spoon': 'Dining Hall',
    'Black Iron Spur': 'Dining Hall',
    'Black Leather Gloves': 'Training Grounds',
    'Blue Stone': 'Golden Deer Classroom',
    'Board Game Piece': 'Entrance Hall',
    'Book of Ghost Stories': 'Cathedral - East Side',
    'Bundle of Dry Hemp': 'Marketplace',
    'Bundle of Herbs': 'Cathedral',
    'Burlap Sack of Rocks': 'Dining Hall',
    'Carving Hammer': "Knight's Hall",
    'Centipede Picture': 'Stables',
    'Clean Dusting Cloth': 'Second Floor - Infirmary',
    'Confessional Letter': 'Stables',
    'Crude Arrowheads': 'Dining Hall Balcony',
    'Crumpled Love Letter': "Knight's Hall",
    'Curry Comb': 'Entrance Hall',
    'Dusty Book of Fables': 'Cathedral',
    'Elegant Hair Clip': 'Second Floor - Audience Chamber',
    'Encyclopedia of Sweets': 'Golden Deer Classroom',
    'Evil-Repelling Amulet': 'Fishing Pond',
    'Exotic Feather': 'Reception Hall',
    'Faded Star Chart': 'Second Floor - Library',
    'Feather Pillow': 'Dining Hall',
    'Foreign Gold Coin': 'Fishing Pond',
    'Fruit Preserves': 'Cathedral',
    'Fur Scarf': 'Near Amiibo Gazebo',
    'Gardening Shears': 'Training Grounds',
    'Grounding Charm': 'Dining Hall',
    'Hammer and Chisel': 'Second Floor',
    'Hand Drawn Map': 'Dining Hall Gardens',
    'Handmade Hair Clip': 'Golden Deer Classroom',
    'Hedgehog Case': 'Graveyard',
    'How to Bake Sweets': 'Cathedral',
    'How to be Tidy': 'Stables',
    'Introduction to Magic': 'Fishing Pond',
    'Iron Cooking Pot': "Knight's Hall",
    'Jousting Almanac': 'Entrance Hall',
    'Leather Bow Sheath': 'Reception Hall',
    'Lens Cloth': "Knight's Hall",
    'Letter to Rhea': 'Training Grounds',
    'Letter to the Goddess': 'Golden Deer Classroom',
    'Light Purple Veil': 'Greenhouse',
    'Lovely Comb': 'Greenhouse',
    'Maintenance Oil': 'Dining Hall',
    'Makeup Brush': 'Sauna',
    'Mild Stomach Poison': 'Golden Deer Classroom',
    "Moon Knight's Tale": 'Cathedral',
    'Mysterious Notebook': 'Cathedreal - Holy Mausoleum Entrance',
    'Needle and Thread': "1st Floor Dormitories - Outside Bernadetta's Room",
    'New Bottle of Perfume': 'Reception Hall',
    'Nimbus Charm': 'Abyss Entrance',
    'Noseless Puppet': "Knight's Hall Entrance",
    'Noxious Handkerchief': 'Training Grounds',
    'Old Cleaning Cloth': 'Second Floor - Lobby',
    'Old Fishing Rod': 'Cathedral - Saint Statue Room',
    'Old Map of Enbarr': 'Fishing Pond',
    'Pegasus Horseshoes': 'Stables',
    'Portrait of Rhea': '2nd Floor Dormitories - Hallway',
    'Princess Doll': 'Reception Hall',
    'Repellent Powder': 'Dining Hall Gardens',
    'School of Sorcery Book': 'Dining Hall',
    'Secret Ledger': 'Dining Hall Gardens',
    'Seiros Scriptures': 'Cathedral',
    'Shiny Striated Pebble': '1st Floor - Dormitories',
    'Silk Handkerchief': 'Golden Deer Classroom',
    'Silver Brooch': "Officer's Academy Courtyard",
    'Silver Necklace': 'Entrance Hall',
    'Sketch of a Sigil': 'Second Floor - Hallway',
    'Small Tanned Hide': 'Reception Hall',
    'Snapped Writing Quill': 'Second Floor - Advisory Room',
    'Songstress Poster': "Officer's Academy",
    'Spotless Bandage': 'Golden Deer Classroom',
    'Stiff Hand Wrap': 'Fishing Hole',
    'Still-Life Picture': '1st Floor - Dormitories',
    'Sword Belt Fragment': 'Training Hall',
    'Tattered Overcoat': 'Training Grounds',
    'The History of Sreng': 'Blue Lions Classroom',
    'The Saints Revealed': 'Reception Hall',
    'Thunderbrand Replica': 'Training Grounds',
    'Toothed Dagger': 'Training Grounds',
    'Training Logbook': "Knight's Hall",
    'Unfinished Fable': 'Second Floor - Advisory Room',
    'Unfinished Score': 'Blue Lions Classroom',
    'Unused Lipstick': 'Reception Hall',
    'Used Bottle of Perfume': 'Marketplace',
    'Wax Diptych': 'Dining Hall',
    'Weathered Cloak': 'Entrance Hall',
    'Well-Used Hatchet': 'Dining Hall Gardens',
    'Wellness Herbs': 'Second Floor - Infirmary',
    'White Glove': 'Black Eagle Classroom',
    'Wooden Button': 'Training Grounds',
    'Wooden Flask': 'Second Floor - Lobby'
})

LOST_ITEM_LOCATIONS_IDX = frozendict({
    0: 17,
    1: 40,
    2: 41,
    3: 38,
    4: 14,
    5: 19,
    7: 10,
    8: 30,
    9: 41,
    10: 9,
    11: 6,
    12: 21,
    13: 22,
    14: 14,
    16: 14,
    17: 41,
    18: 20,
    19: 17,
    20: 11,
    21: 26,
    22: 9,
    23: 14,
    24: 23,
    25: 40,
    26: 37,
    27: 40,
    28: 15,
    29: 23,
    30: 17,
    32: 9,
    34: 35,
    35: 20,
    36: 19,
    37: 31,
    38: 38,
    39: 14,
    41: 19,
    42: 9,
    43: 27,
    44: 41,
    46: 14,
    47: 33,
    48: 16,
    49: 20,
    50: 21,
    51: 9,
    52: 40,
    54: 19,
    55: 23,
    57: 17,
    58: 31,
    59: 23,
    60: 41,
    61: 20,
    62: 22,
    63: 22,
    64: 14,
    65: 32,
    66: 20,
    67: 9,
    68: 13,
    69: 1,
    70: 31,
    71: 4,
    72: 24,
    73: 41,
    74: 39,
    75: 12,
    76: 19,
    77: 40,
    78: 2,
    79: 31,
    81: 16,
    82: 14,
    83: 16,
    84: 9,
    85: 0,
    86: 20,
    87: 29,
    88: 17,
    89: 36,
    90: 31,
    91: 34,
    92: 28,
    93: 20,
    94: 18,
    95: 0,
    97: 42,
    98: 41,
    99: 8,
    100: 31,
    101: 41,
    103: 41,
    104: 23,
    105: 34,
    106: 8,
    107: 31,
    108: 26,
    109: 14,
    110: 17,
    111: 16,
    113: 37,
    114: 5,
    115: 41,
    116: 39
})

LOST_ITEM_MONTHS_IDX = frozendict({
    7: [113,
        27,
        108,
        9,
        8,
        101,
        11,
        68,
        83,
        73],
    0: [94,
        13,
        12],
    12: [79,
         24,
         14,
         75,
         74,
         59,
         18,
         20,
         25,
         3,
         36,
         106],
    6: [82,
        48,
        114,
        34,
        89,
        116,
        58,
        115,
        98],
    1: [110,
        91,
        62,
        32,
        43,
        63,
        19,
        55,
        104,
        3,
        10,
        77,
        49,
        61,
        54,
        72,
        106,
        2,
        103],
    9: [
        47,
        17,
        44,
        88,
        87,
        5,
        52,
        93,
        51,
        1,
        84,
        22],
    2: [13,
        67,
        12,
        4,
        109,
        70,
        64,
        94,
        99,
        46,
        38,
        86,
        50],
    11: [41,
         42,
         66,
         28,
         29,
         92,
         26,
         81,
         0,
         76,
         95,
         105,
         111,
         100],
    8: [35,
        65,
        39,
        69,
        7,
        107,
        78,
        97,
        30,
        71,
        37],
    10: [21,
         23,
         16,
         57,
         90,
         60,
         85]
})

MEAL_RECEPIES = frozendict({
    "Saghert and Cream": [("Peach Currant", 1), ("Noa Fruit", 1)],
    "Sweet Bun Trio": [("Albinean Berries", 1), ("Noa Fruit", 1)],
    "Pheasant Roast with Berry Sauce": [("Poultry", 1), ("Albinean Berries", 1)],
    "Peach Sorbet": [("Peach Currant", 1), ("Chickpeas", 1)],
    "Beast Meat Teppanyaki": [("Wild Game", 1), ("Noa Fruit", 1)],
    "Pickled Rabbit Skewers": [("Wild Game", 1), ("Carrot", 1)],
    "Daphnel Stew": [("Poultry", 1), ("Onion", 1)],
    "Gronder Meat Skewers": [("Wild Game", 1), ("Onion", 1)],
    "Derdriu-Style Fried Pheasant": [("Poultry", 1), ("Carrot", 1)],
    "Vegetable Pasta Salad": [("Cabbage", 1), ("Onion", 1), ("Carrot", 1)],
    "Onion Gratin Soup": [("White Trout", 1), ("Onion", 1)],
    "Country-Style Red Turnip Plate": [("Verona", 1), ("Turnip", 1)],
    "Vegetable Stir-Fry": [("Tomato", 1), ("Chickpeas", 1), ("Cabbage", 1)],
    "Grilled Herring": [("Albinean Herring", 1), ("Turnip", 1)],
    "Fish and Bean Soup": [("White Trout", 1), ("Chickpeas", 1)],
    "Fruit and Herring Tart": [("Albinean Herring", 1), ("Noa Fruit", 1)],
    "Fisherman's Bounty": [("White Trout", 1), ("Teutates Loach", 1)],
    "Fish Sandwich": [("Airmid Pike", 1), ("Cabbage", 1)],
    "Two-Fish Saute": [("Caledonian Gar", 1), ("Albinean Herring", 1)],
    "Bourgeois Pike": [("Airmid Pike", 1), ("Carrot", 1)],
    "Sauteed Jerky": [("Poultry", 1), ("Chickpeas", 1)],
    "Spicy Fish and Turnip Stew": [("Teutates Loach", 1), ("Turnip", 1)],
    "Sweet and Salty Whitefish Saute": [("Teutates Loach", 1), ("Tomato", 1)],
    "Super-Spicy Fish Dango": [("White Trout", 1), ("Tomato", 1)],
    "Sauteed Pheasant and Eggs": [("Poultry", 1), ("Cabbage", 1)],
    "Garreg Mach Meat Pie": [("Wild Game", 1), ("Tomato", 1)],
    "Cheesy Verona Stew": [("Teutates Loach", 1), ("Verona", 1)],
    "Pickled Seafood and Vegetables": [("Caledonian Gar", 1), ("Turnip", 1)],
    "Gautier Cheese Gratin": [("Poultry", 1), ("Noa Fruit", 1)],
    "Cabbage and Herring Stew": [("Albinean Herring", 1), ("Cabbage", 1)],
    "Small Fish Skewers": [("Airmid Goby", 3)],
    "Fried Crayfish": [("Caledonian Crayfish", 3)],
})

# meal_id: [(count, ingredient_id)...]
MEAL_RECEPIES_IDX = frozendict({
    0: [(1, 1), (1, 4)],
    1: [(1, 18), (1, 7)],
    2: [(1, 12), (1, 9)],
    3: [(1, 12), (1, 4)],
    4: [(3, 0)],
    5: [(1, 17), (1, 14)],
    6: [(1, 2), (1, 9)],
    7: [(1, 4), (1, 10), (1, 7)],
    8: [(1, 12), (1, 2)],
    9: [(1, 1), (1, 7)],
    10: [(1, 6), (1, 15)],
    11: [(1, 12), (1, 10)],
    12: [(1, 3), (1, 4)],
    13: [(1, 18), (1, 9)],
    14: [(1, 13), (1, 16)],
    15: [(1, 17), (1, 10)],
    16: [(1, 3), (1, 15)],
    17: [(1, 13), (1, 14)],
    18: [(1, 11), (1, 8)],
    19: [(1, 12), (1, 7)],
    20: [(1, 3), (1, 9)],
    21: [(1, 11), (1, 9)],
    22: [(1, 18), (1, 10)],
    23: [(1, 17), (1, 13)],
    24: [(1, 14), (1, 8), (1, 4)],
    25: [(1, 17), (1, 8)],
    26: [(1, 13), (1, 15)],
    27: [(1, 16), (1, 15)],
    28: [(1, 18), (1, 14)],
    29: [(3, 5)],
    30: [(1, 12), (1, 8)],
    31: [(1, 6), (1, 3)]
})


class DataRecord(object):
    _reference_list = None
    _object_repr = None

    @property
    def object_repr(self):
        if self._object_repr is None:
            return self.__class__.__name__.replace("Record", "")
        return self._object_repr

    @property
    def reference_list(self):
        if self._reference_list is None:
            raise Exception("Bad User! <newspaper>")
        return self._reference_list

    def __init__(self, myid, my_name=None):
        if not isinstance(self.reference_list, tuple):
            raise Exception("Bad User! <classified-section>")
        self.name = my_name
        self.id = myid
        if my_name is None:
            self.name = self.reference_list[myid]

    def __inner_repr__(self):
        return "{}: {}".format(self.object_repr, self.name)

    def __repr__(self):
        return "<{}>".format(self.__inner_repr__())

    def __eq__(self, other):
        return self.id == other.id

    def __ne__(self, other):
        return self.id != other.id

    def __lt__(self, other):
        return self.id < other.id

    def __le__(self, other):
        return self.id <= other.id

    def __gt__(self, other):
        return self.id > other.id

    def __ge__(self, other):
        return self.id >= other.id


class IngredientRecord(DataRecord):
    """FETH Ingredient"""
    _reference_list = INGREDIENT_NAMES

    def __init__(self, myquant=1, *args, **kwargs):
        self.quantity = myquant
        super(IngredientRecord, self).__init__(*args, **kwargs)

    def __inner_repr__(self):
        return "{} x{}".format(
            super(IngredientRecord, self).__inner_repr__(), self.quantity)


class MealRecord(DataRecord):
    """FETH Meal"""
    _reference_list = MEAL_NAMES

    @property
    def recepie(self):
        return tuple([
            IngredientRecord(*ingredient)
            for ingredient in MEAL_RECEPIES_IDX[self.id]])

    def gen_liked_by(self):
        for char_id in MEALPICKS_IDX[self.id]:
            yield CharacterRecord(char_id)

    def liked_by(self, gen=False):
        results = self.gen_liked_by()
        if gen:
            return results
        results = list(results)
        results.sort()
        return results


class Menu(object):
    """FETH Menu"""

    def __init__(self, meal_iter):
        self.menu = tuple(meal_iter)

    @property
    def ingredients(self):
        return tuple([meal.recepie for meal in self.menu])

    def __repr__(self):
        return self.menu.__repr__()


class MonthRecord(DataRecord):
    """FETH Months"""
    _reference_list = MONTH_NAMES


class MonestaryLocationRecord(DataRecord):
    """FETH Monestary Location"""
    _reference_list = MONESTARY_LOCATION_NAMES
    _object_repr = "Monestary Location"


class LostItemRecord(DataRecord):
    """FETH Lost Item"""
    _reference_list = LOST_ITEM_NAMES
    _object_repr = "Lost Item"

    @property
    def month(self):
        for month_id, lost_item_list in LOST_ITEM_MONTHS_IDX.items():
            if self.id in lost_item_list:
                return MonthRecord(month_id)

    @property
    def location(self):
        return MonestaryLocationRecord(LOST_ITEM_LOCATIONS_IDX[self.id])

    @property
    def character(self):
        for char_id, lost_item_list in LOST_ITEM_OWNERS_IDX.items():
            if self.id in lost_item_list:
                return CharacterRecord(char_id)


class CharacterRecord(DataRecord):
    """FETH Character"""
    _reference_list = CHAR_NAMES

    def good_eats(self, gen=False):
        results = self.gen_good_eats()
        if gen:
            return results
        results = list(results)
        results.sort()
        return [MealRecord(meal) for meal in results]

    def gen_good_eats(self):
        for meal_id, char_ids in MEALPICKS_IDX.items():
            if self.id in char_ids:
                yield meal_id

    def gen_meal_share(self, other_char=None):
        share_meals = set(self.good_eats(True))
        try:
            share_meals = share_meals & set(other_char.good_eats(True))
        except AttributeError:
            pass
        for meal_id in share_meals:
            yield MealRecord(meal_id)

    def meal_share(self, other_char, gen=False):
        share_meals = self.gen_meal_share(other_char)
        if not gen:
            share_meals = list(share_meals)
            share_meals.sort()
        return Menu(share_meals)

    def lost_items(self):
        return [
            LostItemRecord(item_id)
            for item_id in LOST_ITEM_OWNERS_IDX[self.id]]


class DataRecordList(object):
    """FETH Data Record List"""

    def __init__(self, ListClass):
        self._data = tuple([
            ListClass(data_id)
            for data_id in range(len(ListClass._reference_list))])

    def __getitem__(self, key):
        if isinstance(key, int):
            return self._data[key]
        elif isinstance(key, basestring):
            return [
                data_item
                for data_item in self._data
                if data_item.name.lower() == key.lower()][0]
        else:
            raise TypeError("Invalid index/key value.")

    def __repr__(self):
        return self._data.__repr__()


characters = DataRecordList(CharacterRecord)

for crs in characters._data:
    setattr(characters, crs.name, crs)
